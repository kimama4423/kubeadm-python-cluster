---
# JupyterHub Secrets
apiVersion: v1
kind: Secret
metadata:
  name: jupyterhub-secret
  namespace: jupyterhub
  labels:
    app.kubernetes.io/name: jupyterhub
    app.kubernetes.io/instance: kubeadm-python-cluster
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Cookie secret (base64 encoded random 32 bytes)
  # To generate: openssl rand -base64 32
  # This is a sample - MUST be changed in production
  cookie-secret: ZjE4MjVlYzQzYWVlNDJiOGE2NzQyNTc3MzI4ODc4OTQzNGVjNzI4NzI5OGY4NzYwYjA2ZmUxNzFjYzY0YmIzMw==
  
  # Crypto key for JupyterHub (base64 encoded)
  # To generate: openssl rand -base64 32
  # This is a sample - MUST be changed in production
  crypto-key: YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY3ODkwYWJjZGVmZ2hpamtsbW5vcA==

---
# Database Secret (if using external database)
apiVersion: v1
kind: Secret
metadata:
  name: jupyterhub-db-secret
  namespace: jupyterhub
  labels:
    app.kubernetes.io/name: jupyterhub
    app.kubernetes.io/instance: kubeadm-python-cluster
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Database connection settings (base64 encoded)
  # Only needed if using PostgreSQL or MySQL
  # Default setup uses SQLite
  
  # database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0Bob3N0OjU0MzIvZGI=
  # database-user: dXNlcg==
  # database-password: cGFzcw==

---
# Registry Secret for pulling images from private registry
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: jupyterhub
  labels:
    app.kubernetes.io/name: jupyterhub
    app.kubernetes.io/instance: kubeadm-python-cluster
    app.kubernetes.io/component: secrets
type: kubernetes.io/dockerconfigjson
data:
  # Docker config for local registry
  # Since we're using insecure local registry, this is minimal
  .dockerconfigjson: eyJhdXRocyI6eyJsb2NhbGhvc3Q6NTAwMCI6eyJ1c2VybmFtZSI6IiIsInBhc3N3b3JkIjoiIiwiYXV0aCI6IiJ9fX0=