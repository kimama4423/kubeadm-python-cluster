---
# JupyterHub Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub
  namespace: jupyterhub
  labels:
    app.kubernetes.io/name: jupyterhub
    app.kubernetes.io/instance: kubeadm-python-cluster
    app.kubernetes.io/component: hub
    app.kubernetes.io/version: "4.0.2"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jupyterhub
      app.kubernetes.io/component: hub
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jupyterhub
        app.kubernetes.io/instance: kubeadm-python-cluster
        app.kubernetes.io/component: hub
    spec:
      serviceAccountName: jupyterhub
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: jupyterhub
        image: localhost:5000/kubeadm-python-cluster/jupyterhub:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: hub
          containerPort: 8081
          protocol: TCP
        env:
        # Basic configuration
        - name: JUPYTERHUB_NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: JUPYTERHUB_NAMESPACE
        - name: JUPYTERHUB_SERVICE_ACCOUNT
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: JUPYTERHUB_SERVICE_ACCOUNT
        - name: JUPYTERHUB_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: JUPYTERHUB_LOG_LEVEL
        - name: JUPYTERHUB_DB_URL
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: JUPYTERHUB_DB_URL
        
        # Container registry
        - name: CONTAINER_REGISTRY
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: CONTAINER_REGISTRY
        
        # Resource defaults
        - name: DEFAULT_CPU_LIMIT
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: DEFAULT_CPU_LIMIT
        - name: DEFAULT_MEM_LIMIT
          valueFrom:
            configMapKeyRef:
              name: jupyterhub-env
              key: DEFAULT_MEM_LIMIT
        
        # Secrets
        - name: JUPYTERHUB_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: jupyterhub-secret
              key: cookie-secret
        - name: JUPYTERHUB_CRYPTO_KEY
          valueFrom:
            secretKeyRef:
              name: jupyterhub-secret
              key: crypto-key
        
        # Kubernetes API access
        - name: KUBERNETES_SERVICE_HOST
          value: kubernetes.default.svc.cluster.local
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        
        volumeMounts:
        - name: config
          mountPath: /etc/jupyterhub/jupyterhub_config.py
          subPath: jupyterhub_config.py
          readOnly: true
        - name: hub-data
          mountPath: /srv/jupyterhub
        - name: shared-data
          mountPath: /srv/jupyterhub/shared
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "0.5"
          limits:
            memory: "1Gi"
            cpu: "1"
        
        livenessProbe:
          httpGet:
            path: /hub/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /hub/health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      
      volumes:
      - name: config
        configMap:
          name: jupyterhub-config
          defaultMode: 0644
      - name: hub-data
        persistentVolumeClaim:
          claimName: jupyterhub-hub-pvc
      - name: shared-data
        persistentVolumeClaim:
          claimName: jupyterhub-shared-data-pvc
      
      imagePullSecrets:
      - name: registry-credentials
      
      nodeSelector:
        kubernetes.io/os: linux
      
      tolerations: []
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - jupyterhub
              topologyKey: kubernetes.io/hostname